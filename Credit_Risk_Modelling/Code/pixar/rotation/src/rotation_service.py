import autogenerated_files.rotation_model_pb2 as rotation_model_pb2
import autogenerated_files.rotation_model_pb2_grpc as rotation_model_pb2_grpc


class Rotation(rotation_model_pb2_grpc.rotation_serviceServicer):
    def RotateImage(self, request, context):
        image_path ='home/ssg0283/Desktop/img.jpg'
        return rotation_model_pb2.rotation_response(rotated_image_path = image_path)

# def serve():
#     server = grpc.server(futures.ThreadPoolExecutor(max_workers=1))
#     rotation_model_pb2_grpc.add_rotation_serviceServicer_to_server(Rotation(),server)
#     server.add_insecure_port('[::]:50057')
#     server.start()
#
#
# if __name__ == '__main__':
#     print("Server ")
#     serve()
